<?xml version="1.0"?>

<!-- ============================================================== -->
<!-- Ant build file for the AspectWerkz AOSD 2004 tutorial project -->
<!-- ============================================================== -->
<project name="AspectWerkz AOSD Tutorial 2004" default="aspectwerkz:test:offline" basedir=".">

    <!-- =================================================== -->
    <!--  initializes parameters  -->
    <!-- =================================================== -->
    <target name="aspectwerkz:init">
        <property name="name" value="aspectwerkz-aosd2004"/>
        <property name="version" value="0.1"/>

        <property name="src.dir" value="${basedir}/src"/>
        <property name="src.main.dir" value="${basedir}/src/main"/>
        <property name="src.test.dir" value="${basedir}/src/test"/>
        <property name="src.web.dir" value="${basedir}/src/web"/>
        <property name="src.site.dir" value="${basedir}/src/site"/>

        <property name="build.dir" value="${basedir}/target"/>
        <property name="build.main.dir" value="${build.dir}/classes"/>
        <property name="build.test.dir" value="${build.dir}/test-classes"/>
        <property name="build.web.dir" value="${build.dir}/web-classes"/>

        <property name="lib.dir" value="${basedir}/lib"/>
        <property name="config.dir" value="${basedir}/config"/>

        <property name="javac.debug" value="on"/>
        <property name="javac.deprecation" value="on"/>
        <property name="javac.optimize" value="off"/>
        <property name="javac.depend" value="off"/>
        <property name="javac.verbose" value="off"/>

        <mkdir dir="${build.main.dir}"/>
        <mkdir dir="${build.test.dir}"/>

        <!-- os specific -->
        <condition property="pathseparator" value=";">
            <os family="dos"/>
        </condition>
        <condition property="executableSuffix" value=".bat">
            <os family="dos"/>
        </condition>
        <!-- os specific -->
        <condition property="pathseparator" value=":">
            <not>
                <os family="dos"/>
            </not>
        </condition>
        <condition property="executableSuffix" value="">
            <not>
                <os family="dos"/>
            </not>
        </condition>

        <property environment="env"/>

        <!-- path set here since it uses env. -->
        <path id="project.class.path">
            <pathelement path="${java.class.path}"/>
            <fileset dir="${basedir}/lib">
                <include name="*.jar"/>
            </fileset>
            <fileset dir="${env.ASPECTWERKZ_HOME}/lib">
                <include name="*.jar"/>
            </fileset>
        </path>
    </target>

    <!-- ============================================================== -->
    <!-- clean -->
    <!-- ============================================================== -->
    <target name="clean" depends="aspectwerkz:init">
        <delete dir="${build.main.dir}"/>
        <delete dir="${build.test.dir}"/>
        <delete dir="${build.web.dir}"/>
        <mkdir dir="${build.main.dir}"/>
        <mkdir dir="${build.test.dir}"/>
        <mkdir dir="${build.web.dir}"/>
    </target>

    <!-- ============================================================== -->
    <!-- compilation targets (main + test) -->
    <!-- ============================================================== -->
    <target name="aspectwerkz:compile" depends="aspectwerkz:init, java:compile">
    </target>

    <target name="java:compile" depends="aspectwerkz:init">
        <javac destdir="${build.main.dir}" debug="${javac.debug}">
            <src path="${src.main.dir}"/>
            <classpath refid="project.class.path"/>
        </javac>
        <javac destdir="${build.test.dir}" debug="${javac.debug}">
            <src path="${src.test.dir}"/>
            <classpath refid="project.class.path"/>
            <classpath>
                <pathelement path="${build.main.dir}"/>
            </classpath>
        </javac>
        <javac destdir="${build.web.dir}" debug="${javac.debug}">
            <src path="${src.web.dir}"/>
            <classpath refid="project.class.path"/>
            <classpath>
                <pathelement path="${build.main.dir}"/>
            </classpath>
        </javac>
    </target>

    <!-- =================================================== -->
    <!--  Aspect compilation (main, asbtract aspects)  -->
    <!-- =================================================== -->
    <target name="aspectwerkz:aspectc"
        depends="aspectwerkz:init, aspectwerkz:compile">
        <java classname="org.codehaus.aspectwerkz.definition.AspectC" fork="true">
            <classpath refid="project.class.path"/>
            <arg value="-verbose"/>
            <arg value="${src.main.dir}"/>
            <arg value="${build.main.dir}"/>
        </java>
    </target>

    <!-- =================================================== -->
    <!--  Aspect compilation (test, concrete aspects)  -->
    <!-- =================================================== -->
    <target name="aspectwerkz:test:aspectc"
        depends="aspectwerkz:init, aspectwerkz:compile, aspectwerkz:aspectc">
<!--        TODO: detail how test:aspectc depends of aspectc in AspectC phase -->
        <java classname="org.codehaus.aspectwerkz.definition.AspectC" fork="true">
            <classpath refid="project.class.path"/>
            <classpath>
                <pathelement path="${build.main.dir}"/>
            </classpath>
            <arg value="-verbose"/>
            <arg value="${src.test.dir}"/>
            <arg value="${build.test.dir}"/>
        </java>
    </target>





    <!-- =================================================== -->
    <!--  Aspect compilation (webapp aspect)  -->
    <!-- =================================================== -->
    <target name="aspectwerkz:war:aspectc"
        depends="aspectwerkz:init, aspectwerkz:compile, aspectwerkz:aspectc">
<!--        TODO: detail how test:aspectc depends of aspectc in AspectC phase -->
        <java classname="org.codehaus.aspectwerkz.definition.AspectC" fork="true">
            <classpath refid="project.class.path"/>
            <classpath>
                <pathelement path="${build.main.dir}"/>
            </classpath>
            <arg value="-verbose"/>
            <arg value="${src.web.dir}"/>
            <arg value="${build.web.dir}"/>
        </java>
    </target>
    <target name="aspectwerkz:war:transform"
        depends="aspectwerkz:compile, aspectwerkz:war:aspectc">
        <java classname="org.codehaus.aspectwerkz.compiler.AspectWerkzC" fork="true">
            <classpath refid="project.class.path"/>
            <classpath>
                <pathelement path="${build.main.dir}"/><!-- needed for abstract Aspect activation -->
                <pathelement path="${build.web.dir}"/><!-- needed for Aspect activation -->
            </classpath>
            <jvmarg value="-Daspectwerkz.definition.file=${src.web.dir}/WEB-INF/aspectwerkz.xml"/>
            <jvmarg value="-Daspectwerkz.transform.verbose=true"/>
            <arg value="-verify"/>
            <arg value="${build.web.dir}"/>
            <arg value="${build.main.dir}"/>
        </java>
    </target>
    <target name="aspectwerkz:war:offline"
        depends="aspectwerkz:init, aspectwerkz:compile">
        <antcall target="aspectwerkz:war:transform"/>
        <war destfile="${build.dir}/aosd.war" webxml="${src.web.dir}/WEB-INF/web.xml">
            <classes dir="${build.web.dir}" includes="**/*"/>
            <classes dir="${build.main.dir}" includes="**/*"/>
            <lib dir="${lib.dir}" includes="**/*"/>
            <lib dir="${env.ASPECTWERKZ_HOME}/lib" includes="**/*"/>
            <fileset dir="${src.site.dir}">
                <include name="**/*"/>
            </fileset>
        </war>
    </target>
    <target name="aspectwerkz:war:online"
        depends="aspectwerkz:init, aspectwerkz:compile">
        <war destfile="${build.dir}/aosd.war" webxml="${src.web.dir}/WEB-INF/web.xml">
            <classes dir="${build.web.dir}" includes="**/*"/>
            <classes dir="${build.main.dir}" includes="**/*"/>
            <lib dir="${lib.dir}" includes="**/*"/>
            <lib dir="${env.ASPECTWERKZ_HOME}/lib" includes="**/*"/>
            <fileset dir="${src.site.dir}">
                <include name="**/*"/>
            </fileset>
        </war>
    </target>





    <!-- =================================================== -->
    <!--  offline transforms the tests -->
    <!-- =================================================== -->
    <target name="aspectwerkz:test:transform"
        depends="aspectwerkz:compile, aspectwerkz:test:aspectc">
        <java classname="org.codehaus.aspectwerkz.compiler.AspectWerkzC" fork="true">
            <classpath refid="project.class.path"/>
            <classpath>
                <pathelement path="${build.main.dir}"/><!-- needed for abstract Aspect activation -->
                <pathelement path="${build.test.dir}"/><!-- needed for Aspect activation -->
            </classpath>
            <jvmarg value="-Daspectwerkz.definition.file=${src.test.dir}/all-test.xml"/>
            <jvmarg value="-Daspectwerkz.transform.verbose=true"/>
            <arg value="-verify"/>
            <arg value="${build.test.dir}"/>
        </java>
<!--        NOTE: using CLI setting the project class path is a pain in Ant -->
<!--        <exec executable="${env.ASPECTWERKZ_HOME}/bin/aspectwerkz${executableSuffix}">-->
<!--            <arg line="-offline ${src.test.dir}/all-test.xml -verify -cp ${build.main.dir} ${build.test.dir} "/>-->
<!--        </exec>-->
    </target>

    <!-- =================================================== -->
    <!--  runs offline tests -->
    <!-- =================================================== -->
    <target name="aspectwerkz:test:offline"
        depends="aspectwerkz:test:transform">
        <sleep seconds="2" />
        <java classname="aspectwerkz.aosd.test.AllTests" fork="true">
            <classpath refid="project.class.path"/>
            <classpath>
                <pathelement path="${build.main.dir}"/>
                <pathelement path="${build.test.dir}"/>
            </classpath>
            <jvmarg value="-Daspectwerkz.definition.file=${src.test.dir}/all-test.xml"/>
            <jvmarg value="-Djava.security.auth.login.config=${src.test.dir}/jaas.config"/>
            <jvmarg value="-Djava.security.policy=${config.dir}/aosd2004.policy"/>
        </java>
<!--        <exec executable="${bin.dir}/aspectwerkz${executableSuffix}">-->
<!--            <arg line="-cp ${test.classes}${pathseparator}${samples.classes}${pathseparator}${lib.dir}/junit-3.8.1.jar${pathseparator}${lib.dir}/junitperf.jar -Daspectwerkz.definition.file=${src.dir}/test/aspectwerkz-test.xml test.xmldef.AllTests"/>-->
<!--        </exec>-->
    </target>

    <!-- =================================================== -->
    <!--  Run online tests -->
    <!-- =================================================== -->
    <target name="aspectwerkz:test:online"
        depends="aspectwerkz:test:aspectc">
<!--        TODO : CLI is a pain for jvm options -->
        <exec executable="${env.ASPECTWERKZ_HOME}/bin/aspectwerkz${executableSuffix}">
            <arg line="-Djava.security.auth.login.config=${src.test.dir}/jaas.config -Djava.security.policy=${config.dir}/aosd2004.policy -cp ${build.test.dir}${pathseparator}${build.main.dir}${pathseparator}${lib.dir}/jisp-2.0.1.jar${pathseparator}${lib.dir}/junit-3.8.1.jar${pathseparator}${lib.dir}/jta.jar${pathseparator}${lib.dir}/tagish-1.0.2.jar -Daspectwerkz.definition.file=${src.test.dir}/all-test.xml aspectwerkz.aosd.test.AllTests"/>
        </exec>
    </target>





























    <!-- =================================================== -->
    <!--  Fibonnaci Aspect compilation -->
    <!-- =================================================== -->
    <target name="aspectwerkz:aspectc:fibo"
        depends="aspectwerkz:init, aspectwerkz:compile">
        <java classname="org.codehaus.aspectwerkz.definition.AspectC" fork="true">
            <classpath refid="project.class.path"/>
            <arg value="-verbose"/>
            <arg value="${src.main.dir}/aspectwerkz/aosd/example"/><!-- only Fibonacci -->
            <arg value="${build.main.dir}"/>
        </java>
    </target>
    <!-- =================================================== -->
    <!--  Fibonnaci Aspect OFFLINE -->
    <!-- =================================================== -->
    <target name="aspectwerkz:offline:fibo"
        depends="aspectwerkz:init, aspectwerkz:aspectc:fibo">
        <java classname="org.codehaus.aspectwerkz.compiler.AspectWerkzC" fork="true">
            <classpath refid="project.class.path"/>
            <classpath>
                <pathelement path="${build.main.dir}"/><!-- needed for Aspect activation -->
            </classpath>
            <jvmarg value="-Daspectwerkz.definition.file=${src.main.dir}/fibonacci.xml"/>
            <jvmarg value="-Daspectwerkz.transform.verbose=true"/>
            <arg value="${build.main.dir}"/>
        </java>
    </target>













</project>

