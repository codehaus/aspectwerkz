<!DOCTYPE aspectwerkz PUBLIC
    "-//AspectWerkz//DTD//EN"
    "http://aspectwerkz.codehaus.org/dtd/aspectwerkz.dtd">

<aspectwerkz>
    <system id="tests">
        <exclude package="test.attribdeff"/>
        <package name="test.aspect">
            <aspect class="MemberMethodTestAspect"/>
            <aspect class="StaticMethodTestAspect"/>
            <aspect class="FieldTestAspect"/>
            <aspect class="CallerSideTestAspect"/>
            <aspect class="CFlowTestAspect"/>
            <aspect class="IntroductionTestAspect">
                <introduce class="IntroductionTestAspect$MyImpl" bind-to="class(test.ToBeIntroduced)"/>
            </aspect>
            <aspect class="DynamicDeploymentTestAspect"/>
        </package>
        <package name="test.performance">
            <aspect class="PerJVMPerformanceAspect" deployment-model="perClass"/>
            <aspect class="PerClassPerformanceAspect" deployment-model="perClass"/>
            <aspect class="PerInstancePerformanceAspect" deployment-model="perInstance"/>
            <aspect class="PerThreadPerformanceAspect" deployment-model="perThread"/>
        </package>
        <aspect class="test.mixindeployment.IntroductionDeploymentAspect"/>
        <aspect class="test.abstractclass.TestAspect"/>
        <aspect class="test.hierarchicalpattern.TestAspect"/>
        <aspect class="test.pointcutexpression.TestAspect"/>
        <aspect class="test.clapp.TestAspect" deployment-model="perInstance"/>
        <aspect class="test.reflection.TestAspect"/>
        <aspect class="test.staticfield.TestAspect"/>
        <aspect class="test.superclassconstructor.TestAspect"/>
        <aspect class="test.constructor.ConstructorTestAspect"/>
<!--        <aspect class="test.afterexception.TestAspect"/>-->
        <aspect class="test.handler.HandlerTestAspect">
            <pointcut name="handler" expression="handler(test.handler.HandlerTestBeforeException)"/>
            <advice bind-to="handler" type="before" name="before"/>
        </aspect>
        <aspect class="test.orthogonal.OrthogonalTestAspect"/>
        <aspect class="test.callAndExecution.TestAspect"/>


        <!-- The following tests different forms of precedence -->
        <!-- * advice order -->
        <!-- * pointcut order -->
        <!-- * aspect order -->
        <!-- Nomenclature: A and RA: RA is the reversed precedence of A -->
        <!-- Binding syntax - two advices. Precdence differs in both aspects -->
        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxA">
            <pointcut name="test" expression="execution(* test.bindingsyntax.*.doA*(..))"/>
            <advice bind-to="test" type="around" name="advice1"/>
            <advice bind-to="test" type="around" name="advice2"/>
        </aspect>
        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxRA">
            <pointcut name="test" expression="execution(* test.bindingsyntax.*.doRA*(..))"/>
            <advice bind-to="test" type="around" name="advice2"/>
            <advice bind-to="test" type="around" name="advice1"/>
        </aspect>

        <!-- Binding syntax - same pointcut with a different name. Binding precedence differs in both aspects -->
        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxC">
            <pointcut name="test2" expression="execution(* test.bindingsyntax.*.doC*(..))"/>
            <pointcut name="test" expression="execution(* test.bindingsyntax.*.doC*(..))"/>
            <advice bind-to="test" type="around" name="advice1"/>
            <advice bind-to="test2" type="around" name="advice2"/>
        </aspect>
        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxRC">
            <pointcut name="test2" expression="execution(* test.bindingsyntax.*.doRC*(..))"/>
            <pointcut name="test" expression="execution(* test.bindingsyntax.*.doRC*(..))"/>
            <advice bind-to="test2" type="around" name="advice2"/>
            <advice bind-to="test" type="around" name="advice1"/>
        </aspect>

        <!--  bindingsyntax : two aspects. In both case the aspects are declared in a different order -->
        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxD_1">
            <pointcut name="test" expression="execution(* test.bindingsyntax.*.doD*(..))"/>
            <advice bind-to="test" type="around" name="advice1"/>
        </aspect>
        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxD_2">
            <pointcut name="test" expression="execution(* test.bindingsyntax.*.doD*(..))"/>
            <advice bind-to="test" type="around" name="advice2"/>
        </aspect>
        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxRD_2">
            <pointcut name="test" expression="execution(* test.bindingsyntax.*.doRD*(..))"/>
            <advice bind-to="test" type="around" name="advice2"/>
        </aspect>
        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxRD_1">
            <pointcut name="test" expression="execution(* test.bindingsyntax.*.doRD*(..))"/>
            <advice bind-to="test" type="around" name="advice1"/>
        </aspect>
    </system>
</aspectwerkz>
