<!DOCTYPE aspectwerkz PUBLIC
    "-//AspectWerkz//DTD//EN"
    "http://aspectwerkz.codehaus.org/dtd/aspectwerkz.dtd">

<aspectwerkz>
    <system id="tests">
        <exclude package="test.attribdeff"/>
<!--        <package name="test.aspect">-->
<!--            <aspect class="MemberMethodTestAspect"/>-->
<!--            <aspect class="StaticMethodTestAspect"/>-->
<!--            <aspect class="FieldTestAspect"/>-->
<!--            <aspect class="CallerSideTestAspect"/>-->
<!--            <aspect class="CFlowTestAspect"/>-->
<!--            <aspect class="IntroductionTestAspect"/>-->
<!--            <aspect class="DynamicDeploymentTestAspect"/>-->
<!--        </package>-->
<!--        <package name="test.performance">-->
<!--            <aspect class="PerJVMPerformanceAspect" deployment-model="perClass"/>-->
<!--            <aspect class="PerClassPerformanceAspect" deployment-model="perClass"/>-->
<!--            <aspect class="PerInstancePerformanceAspect" deployment-model="perInstance"/>-->
<!--            <aspect class="PerThreadPerformanceAspect" deployment-model="perThread"/>-->
<!--        </package>-->
<!--        <aspect class="test.mixindeployment.IntroductionDeploymentAspect"/>-->
<!--        <aspect class="test.abstractclass.TestAspect"/>-->
<!--        <aspect class="test.hierarchicalpattern.TestAspect"/>-->
<!--        <aspect class="test.pointcutexpression.TestAspect"/>-->
<!--        <aspect class="test.clapp.TestAspect" deployment-model="perInstance"/>-->
<!--        <aspect class="test.reflection.TestAspect"/>-->
<!--        <aspect class="test.staticfield.TestAspect"/>-->
<!--        <aspect class="test.superclassconstructor.TestAspect"/>                                   -->
<!--        <aspect class="test.constructor.ConstructorTestAspect"/>-->
        <aspect class="test.handler.HandlerTestAspect"/>

        <!-- The following tests different forms of precedence -->
        <!-- * advice order -->
        <!-- * pointcut order -->
        <!-- * aspect order -->
        <!-- Nomenclature: A and RA: RA is the reversed precedence of A -->
        <!-- Binding syntax - two advices. Precdence differs in both aspects -->
<!--        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxA">-->
<!--            <pointcut-def name="test" type="execution" pattern="* test.bindingsyntax.*.doA*(..)"/>-->
<!--            <advice-def bind-to="test" type="around" name="advice1"/>-->
<!--            <advice-def bind-to="test" type="around" name="advice2"/>-->
<!--        </aspect>-->
<!--        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxRA">-->
<!--            <pointcut-def name="test" type="execution" pattern="* test.bindingsyntax.*.doRA*(..)"/>-->
<!--            <advice-def bind-to="test" type="around" name="advice2"/>-->
<!--            <advice-def bind-to="test" type="around" name="advice1"/>-->
<!--        </aspect>-->

        <!-- Binding syntax - same pointcut with a different name. Binding precedence differs in both aspects -->
<!--        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxC">-->
<!--            <pointcut-def name="test2" type="execution" pattern="* test.bindingsyntax.*.doC*(..)"/>-->
<!--            <pointcut-def name="test" type="execution" pattern="* test.bindingsyntax.*.doC*(..)"/>-->
<!--            <advice-def bind-to="test" type="around" name="advice1"/>-->
<!--            <advice-def bind-to="test2" type="around" name="advice2"/>-->
<!--        </aspect>-->
<!--        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxRC">-->
<!--            <pointcut-def name="test2" type="execution" pattern="* test.bindingsyntax.*.doRC*(..)"/>-->
<!--            <pointcut-def name="test" type="execution" pattern="* test.bindingsyntax.*.doRC*(..)"/>-->
<!--            <advice-def bind-to="test2" type="around" name="advice2"/>-->
<!--            <advice-def bind-to="test" type="around" name="advice1"/>-->
<!--        </aspect>-->

        <!--  bindingsyntax : two aspects. In both case the aspects are declared in a different order -->
<!--        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxD_1">-->
<!--            <pointcut-def name="test" type="execution" pattern="* test.bindingsyntax.*.doD*(..)"/>-->
<!--            <advice-def bind-to="test" type="around" name="advice1"/>-->
<!--        </aspect>-->
<!--        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxD_2">-->
<!--            <pointcut-def name="test" type="execution" pattern="* test.bindingsyntax.*.doD*(..)"/>-->
<!--            <advice-def bind-to="test" type="around" name="advice2"/>-->
<!--        </aspect>-->
<!--        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxRD_2">-->
<!--            <pointcut-def name="test" type="execution" pattern="* test.bindingsyntax.*.doRD*(..)"/>-->
<!--            <advice-def bind-to="test" type="around" name="advice2"/>-->
<!--        </aspect>-->
<!--        <aspect class="test.bindingsyntax.TestAspect" name="BindingSyntaxRD_1">-->
<!--            <pointcut-def name="test" type="execution" pattern="* test.bindingsyntax.*.doRD*(..)"/>-->
<!--            <advice-def bind-to="test" type="around" name="advice1"/>-->
<!--        </aspect>-->
    </system>
</aspectwerkz>
