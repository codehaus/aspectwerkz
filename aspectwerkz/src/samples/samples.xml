<?xml version="1.0"?>

<aspectwerkz>

    <!-- ============================================= -->
    <!--  Introductions                                -->
    <!-- ============================================= -->
    <introduction-def name="mixin"
        interface="examples.introduction.Mixin"
        implementation="examples.introduction.MixinImpl"
        deployment-model="perJVM"/>

    <!-- ============================================= -->
    <!--  Advices                                      -->
    <!-- ============================================= -->
    <advice-def name="invocationCounter"
        advice="examples.caching.InvocationCounterAdvice"
        deployment-model="perInstance"
        attribute="invocationCounter"/>

    <advice-def name="cache"
        class="examples.caching.CachingAdvice"
        deployment-model="perInstance">
        <param name="timeout" value="10"/>
    </advice-def>

    <advice-def name="asynchronous"
        class="examples.asynchronous.AsynchronousAdvice"
        deployment-model="perJVM"/>

    <advice-def name="synchronize"
        class="examples.synchronization.SynchronizationAdvice"
        deployment-model="perJVM"/>

    <!-- ============================================= -->
    <!--  Abstract aspects                             -->
    <!-- ============================================= -->
    <abstract-aspect name="AbstractSynchronization">
        <advice pointcut="synchronized_calls">
            <advice-ref name="synchronize"/>
        </advice>
    </abstract-aspect>

    <!-- ============================================= -->
    <!--  Concrete aspects                             -->
    <!-- ============================================= -->
    <aspect name="Synchronization" extends="AbstractSynchronization">
        <pointcut-def name="synchronized_calls" type="method" pattern="* examples.synchronization.Target.toSynchronize()"/>
    </aspect>

    <aspect name="Caching">
        <pointcut-def name="callee" type="method" pattern="int examples.caching.Pi.getPiDecimal(int)"/>
        <pointcut-def name="caller" type="callerSide" pattern="examples.caching.*->int examples.caching.Pi.getPiDecimal(int)"/>
        <advice pointcut="callee">
            <advice-ref name="cache"/>
        </advice>
        <advice pointcut="caller">
            <advice-ref name="invocationCounter"/>
        </advice>
    </aspect>

    <aspect name="Asynchronous">
        <pointcut-def name="asynchronous_calls" type="method" pattern="* examples.asynchronous.Target.toRunAsynchronously()"/>
        <advice pointcut="asynchronous_calls">
            <advice-ref name="asynchronous"/>
        </advice>
    </aspect>

    <aspect name="Introduction">
        <introduction class="examples.introduction.Target">
            <introduction-ref name="mixin"/>
        </introduction>
    </aspect>




<!--     ===== TEST ASPECTS BELOW (has nothing to do with the examples =====-->

<!--    <advice-def name="log" advice="examples.logging.LoggingAdvice" deployment-model="perInstance">-->
<!--        <param name="param" value="value"/>-->
<!--    </advice-def>-->
<!--    <aspect name="MethodInterceptor">-->
<!--        <pointcut-def name="collab_calls" type="method" pattern="* *.*(..)"/>-->
<!--        <pointcut-def name="vm" type="method" pattern="* org.virtualmock..*.*(..)"/>-->
<!--        <pointcut-def name="junit" type="method" pattern="* junit..*.*(..)"/>-->
<!--        <pointcut-def name="java_lang" type="method" pattern="* java.lang..*.*(..)"/>-->
<!--        <pointcut-def name="java_util" type="method" pattern="* java.util..*.*(..)"/>-->
<!--        <pointcut-def name="aspectwerkz" type="method" pattern="* org.codehaus.aspectwerkz..*.*(..)"/>-->
<!--        <pointcut-def name="unit_test_suite" type="method" pattern="* examples.logging.AllTests.*(..)"/>-->
<!--        <pointcut-def name="unit_test_class" type="method" pattern="* examples.logging.SampleTest.*(..)"/>-->
<!--        <advice pointcut="collab_calls AND !vm AND !junit AND !java_lang AND !java_util AND !aspectwerkz AND !unit_test_suite AND !unit_test_class">-->
<!--            <advice-ref name="log"/>-->
<!--        </advice>-->
<!--    </aspect>-->

</aspectwerkz>
