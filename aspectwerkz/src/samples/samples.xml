<?xml version="1.0"?>

<aspectwerkz>

    <!-- ============================================= -->
    <!--  Advices                                      -->
    <!-- ============================================= -->
    <advice-def name="invocationCounter"
        advice="examples.caching.InvocationCounterAdvice"
        deployment-model="perInstance"
        attribute="invocationCounter"/>

    <advice-def name="cache"
        class="examples.caching.CachingAdvice"
        deployment-model="perInstance">
        <param name="timeout" value="10"/>
    </advice-def>

    <advice-def name="asynchronous"
        class="examples.asynchronous.AsynchronousAdvice"
        deployment-model="perJVM"/>

    <advice-def name="synchronize"
        class="examples.synchronization.SynchronizationAdvice"
        deployment-model="perJVM"/>

    <!-- ============================================= -->
    <!--  Abstract aspects                             -->
    <!-- ============================================= -->
    <abstract-aspect name="AbstractSynchronization">
        <advice pointcut="synchronized_calls">
            <advice-ref name="synchronize"/>
        </advice>
    </abstract-aspect>

    <!-- ============================================= -->
    <!--  Concrete aspects                             -->
    <!-- ============================================= -->
    <aspect name="Synchronization" extends="AbstractSynchronization">
        <pointcut-def name="synchronized_calls" type="method" pattern="* examples.synchronization.Target.toSynchronize()"/>
    </aspect>

    <aspect name="Caching">
        <pointcut-def name="callee" type="method" pattern="int examples.caching.Pi.getPiDecimal(int)"/>
        <pointcut-def name="caller" type="callerSide" pattern="examples.caching.*->int examples.caching.Pi.getPiDecimal(int)"/>
        <advice pointcut="callee">
            <advice-ref name="cache"/>
        </advice>
        <advice pointcut="caller">
            <advice-ref name="invocationCounter"/>
        </advice>
    </aspect>

    <aspect name="Asynchronous">
        <pointcut-def name="asynchronous_calls" type="method" pattern="* examples.asynchronous.Target.toRunAsynchronously()"/>
        <advice pointcut="asynchronous_calls">
            <advice-ref name="asynchronous"/>
        </advice>
    </aspect>

</aspectwerkz>
