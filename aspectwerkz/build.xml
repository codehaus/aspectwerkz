<?xml version="1.0"?>

<project name="AspectWerkz" default="dist" basedir=".">

    <path id="project.class.path">
        <pathelement path="${java.class.path}"/>
        <pathelement path="${build.core.dir}"/>
        <fileset dir="${basedir}/lib">
            <include name="*.jar"/>
        </fileset>
        <pathelement location="${basedir}/src/samples"/>
    </path>

    <target name="init">
        <property name="project.name" value="aspectwerkz"/>
        <property environment="env"/>

        <property name="name" value="aspectwerkz"/>
        <property name="version" value="0.6"/>
        <property name="basedir" value="."/>

        <property name="src.dir" value="${basedir}/src/main"/>
        <property name="test.src.dir" value="${basedir}/src/test"/>

        <property name="build.dir" value="${basedir}/target"/>
        <property name="build.core.dir" value="${build.dir}/classes"/>
        <property name="build.test.dir" value="${build.dir}/test-classes"/>
        <property name="lib.dir" value="${basedir}/lib"/>
        <property name="dist.dir" value="${basedir}/dist"/>
        <property name="config.dir" value="${basedir}/config"/>

        <property name="build.compiler.emacs" value="true"/>
        <property name="build.compiler" value="jikes"/>

        <property name="javac.debug" value="on"/>
        <property name="javac.deprecation" value="on"/>
        <property name="javac.optimize" value="on"/>
        <property name="javac.depend" value="off"/>
        <property name="javac.verbose" value="off"/>

    </target>

    <target name="prepare" depends="init, copy"/>

    <target name="clean" depends="init">
        <delete dir="${build.core.dir}"/>
        <delete dir="${build.test.dir}"/>
        <mkdir dir="${build.core.dir}"/>
        <mkdir dir="${build.test.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <target name="copy" depends="init">
        <!--        <copy todir="${build.core.dir}">-->
        <!--            <fileset dir="${config.dir}">-->
        <!--                <include name="*.properties"/>-->
        <!--                <include name="*.xml"/>-->
        <!--                <include name="*.dtd"/>-->
        <!--                <include name="*.config"/>-->
        <!--            </fileset>-->
        <!--        </copy>-->
    </target>

    <!-- ============================================================== -->
    <!-- compilation targets -->
    <!-- ============================================================== -->

    <target name="compile" depends="prepare">
        <javac destdir="${build.core.dir}" debug="off">
            <src path="${src.dir}"/>
            <classpath>
                <pathelement path="${java.class.path}"/>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </javac>

        <javac destdir="${build.test.dir}" debug="off">
            <src path="${test.src.dir}"/>
            <classpath>
                <pathelement path="${java.class.path}"/>
                <pathelement path="${build.core.dir}"/>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>

    <!-- ============================================================== -->
    <!-- create distribution -->
    <!-- ============================================================== -->

    <target name="dist" depends="clean, compile">
        <mkdir dir="${dist.dir}"/>
        <jar destfile="${build.dir}/aspectwerkz-${version}.jar">
            <fileset dir="${build.core.dir}"/>
        </jar>
        <copy tofile="${lib.dir}/aspectwerkz-${version}.jar" file="${build.dir}/aspectwerkz-${version}.jar" overwrite="true"/>
        <!--        <jar destfile="${dist.dir}/aspectwerkz-${version}.jar" manifest="${config.dir}/MANIFEST.MF">-->
        <!--            <fileset dir="${build.core.dir}"/>-->
        <!--            <fileset dir="${lib.dir}" includes="jmangler-core.jar bcel.jar dom4j-1.4.jar qdox4j-1.2.jar trove-1.0.2.jar concurrent-1.3.1.jar prevayler-2.00.000dev1.jar"/>-->
        <!--            <manifest>-->
        <!--                <attribute name="Built-By" value="jboner"/>-->
        <!--                <section name="aspectwerkz">-->
        <!--                    <attribute name="Implementation-Title" value="AspectWerkz"/>-->
        <!--                    <attribute name="Implementation-Version" value="${version}"/>-->
        <!--                    <attribute name="Implementation-Vendor" value="jboner"/>-->
        <!--                    <attribute name="Class-path" value="jmangler-core.jar bcel.jar dom4j-1.4.jar qdox-1.2.jar trove-1.0.2.jar concurrent-1.3.1.jar prevayler-2.00.000dev1.jar"/>-->
        <!--                </section>-->
        <!--            </manifest>-->
        <!--        </jar>-->
    </target>

    <!-- ============================================================== -->
    <!-- meta data compilation targets -->
    <!-- ============================================================== -->

        <path id="aspectwerkz.classpath">
            <fileset dir="${basedir}/lib">
                <include name="${basedir}/target/classes"/>
                <include name="*.jar"/>
            </fileset>
        </path>
        <property name="aspectwerkz.classpath" refid="aspectwerkz.classpath"/>

    <!--    <target name="compileMetaData" depends="init">-->
    <!--        <compileSourceMetaData-->
    <!--            definitionFile="${basedir}/src/samples/samples.xml"-->
    <!--            sourceDir="${basedir}/src/samples"-->
    <!--            metaDataDir="${basedir}/_metaData"/>-->
    <!--        <compileSourceMetaData-->
    <!--            definitionFile="${basedir}/src/test/aspectwerkz-test.xml"-->
    <!--            sourceDir="${basedir}/src/test"-->
    <!--            metaDataDir="${basedir}/_metaData"/>-->
    <!--    </target>-->
    <!---->
    <!--    <target name="classMetaData" depends="init">-->
    <!--        <compileClassMetaData-->
    <!--            definitionFile="${basedir}/src/samples/samples.xml"-->
    <!--            repository="${basedir}/target/samples-classes"-->
    <!--            metaDataDir="${basedir}/_metaData"/>-->
    <!--    </target>-->
    <!---->
    <!--    <target name="sourceMetaData" depends="init">-->
    <!--        <compileSourceMetaData-->
    <!--            definitionFile="${basedir}/src/samples/samples.xml"-->
    <!--            sourceDir="${basedir}/src/samples"-->
    <!--            metaDataDir="${basedir}/_metaData"/>-->
    <!--    </target>-->

    <!-- ============================================================== -->
    <!-- task definitions -->
    <!-- ============================================================== -->

    <target name="offline" depends="init">
        <offlineTransformation
            aspectWerkzHome="${basedir}"
            definitionFile="${basedir}/src/samples/samples.xml"
            classesDir="${basedir}/target/samples-classes"
            metaDataDir="${basedir}/_metaData"/>
    </target>

    <!-- ============================================================== -->
    <!-- task definitions -->
    <!-- ============================================================== -->

    <taskdef name="compileSourceMetaData"
        classname="org.codehaus.aspectwerkz.task.SourceFileMetaDataCompilerTask"
        classpath="${aspectwerkz.classpath}"/>

    <taskdef name="compileClassMetaData"
        classname="org.codehaus.aspectwerkz.task.ClassFileMetaDataCompilerTask"
        classpath="${aspectwerkz.classpath}"/>

    <taskdef name="offlineTransformation"
        classname="org.codehaus.aspectwerkz.task.OfflineTransformationTask"
        classpath="${aspectwerkz.classpath}"/>

</project>

