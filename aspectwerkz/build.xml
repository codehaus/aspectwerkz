<?xml version="1.0"?>

<!-- ============================================================== -->
<!-- Ant build file for the AspectWerkz project -->
<!-- ============================================================== -->
<project name="AspectWerkz" default="aspectwerkz:jar" basedir=".">

    <path id="project.class.path">
        <pathelement path="${java.class.path}"/>
        <pathelement path="${build.core.dir}"/>
        <fileset dir="${basedir}/lib">
            <include name="*.jar"/>
        </fileset>
        <pathelement location="${basedir}/src/samples"/>
    </path>

    <path id="aspectwerkz.classpath">
        <fileset dir="${basedir}/lib">
            <include name="${basedir}/target/classes"/>
            <include name="*.jar"/>
        </fileset>
    </path>
    <property name="aspectwerkz.classpath" refid="aspectwerkz.classpath"/>

    <!-- =================================================== -->
    <!--  initializes parameters  -->
    <!-- =================================================== -->
    <target name="aspectwerkz:init">
        <property name="name" value="aspectwerkz"/>
        <property name="version" value="0.8"/>
        <property name="basedir" value="."/>
        <property name="src.dir" value="${basedir}/src"/>
        <property name="test.src.dir" value="${basedir}/src/test"/>
        <property name="build.dir" value="${basedir}/target"/>
        <property name="build.core.dir" value="${build.dir}/classes"/>
        <property name="build.test.dir" value="${build.dir}/test-classes"/>
        <property name="lib.dir" value="${basedir}/lib"/>
        <property name="dist.dir" value="${basedir}/dist"/>
        <property name="config.dir" value="${basedir}/config"/>
        <!--        <property name="build.compiler.emacs" value="true"/>-->
        <!--        <property name="build.compiler" value="jikes"/>-->
        <property name="javac.debug" value="on"/>
        <property name="javac.deprecation" value="on"/>
        <property name="javac.optimize" value="on"/>
        <property name="javac.depend" value="off"/>
        <property name="javac.verbose" value="off"/>
        <mkdir dir="${dist.dir}"/>

        <!-- os specific -->
        <condition property="pathseparator" value=";">
            <os family="dos"/>
        </condition>
        <condition property="executableSuffix" value=".bat">
            <os family="dos"/>
        </condition>
        <!-- os specific -->
        <condition property="pathseparator" value=":">
            <not>
                <os family="dos"/>
            </not>
        </condition>
        <condition property="executableSuffix" value="">
            <not>
                <os family="dos"/>
            </not>
        </condition>
        <property name="target.dir" value="${basedir}/target"/>
        <property name="lib.dir" value="${basedir}/lib"/>
        <property name="bin.dir" value="${basedir}/bin"/>
        <property name="dist.dir" value="${basedir}/dist"/>
        <property name="main.classes" value="${target.dir}/classes"/>
        <property name="test.classes" value="${target.dir}/test-classes"/>
        <property name="samples.classes" value="${target.dir}/samples-classes"/>
        <property name="extensions.classes" value="${target.dir}/extensions-classes"/>
        <property name="project.name" value="aspectwerkz"/>
        <property environment="env"/>
    </target>

    <!-- ============================================================== -->
    <!-- clean -->
    <!-- ============================================================== -->
    <target name="clean" depends="aspectwerkz:init">
        <delete dir="${build.core.dir}"/>
        <delete dir="${build.test.dir}"/>
        <mkdir dir="${build.core.dir}"/>
        <mkdir dir="${build.test.dir}"/>
        <mkdir dir="${dist.dir}"/>
    </target>

    <!-- ============================================================== -->
    <!-- compilation targets -->
    <!-- ============================================================== -->
    <target name="java:compile" depends="aspectwerkz:init">
        <javac destdir="${build.core.dir}" debug="off">
            <src path="${src.dir}/main"/>
            <classpath>
                <pathelement path="${java.class.path}"/>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </javac>

        <javac destdir="${build.test.dir}" debug="off">
            <src path="${test.src.dir}"/>
            <classpath>
                <pathelement path="${java.class.path}"/>
                <pathelement path="${build.core.dir}"/>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
        </javac>
    </target>
    <target name="aspectwerkz:compile" depends="aspectwerkz:init, java:compile">
        <antcall target="aspectwerkz:jar"/>
        <antcall target="aspectwerkz:extensions:compile"/>
        <antcall target="aspectwerkz:samples:compile"/>
    </target>

    <!-- ============================================================== -->
    <!-- create distribution -->
    <!-- ============================================================== -->
    <target name="aspectwerkz:jar" depends="java:compile">
        <mkdir dir="${dist.dir}"/>
        <copy file="${src.dir}/main/aspectwerkz.dtd" todir="${build.core.dir}"/>
        <jar destfile="${build.dir}/aspectwerkz-${version}.jar">
            <fileset dir="${build.core.dir}">
                <exclude name="**/aspectwerkz/hook/**/*"/>
            </fileset>
        </jar>
        <copy tofile="${lib.dir}/aspectwerkz-${version}.jar" file="${build.dir}/aspectwerkz-${version}.jar" overwrite="true"/>
        <!-- split dist for layer 1 separation -->
        <jar destfile="${build.dir}/aspectwerkz-core-${version}.jar">
            <fileset dir="${build.core.dir}">
                <include name="**/aspectwerkz/hook/**/*"/>
            </fileset>
        </jar>
        <copy tofile="${lib.dir}/aspectwerkz-core-${version}.jar" file="${build.dir}/aspectwerkz-core-${version}.jar" overwrite="true"/>
        <!--        <jar destfile="${dist.dir}/aspectwerkz-${version}.jar" manifest="${config.dir}/MANIFEST.MF">-->
        <!--            <fileset dir="${build.core.dir}"/>-->
        <!--            <fileset dir="${lib.dir}" includes="jmangler-core.jar bcel.jar dom4j-1.4.jar qdox4j-1.2.jar trove-1.0.2.jar concurrent-1.3.1.jar prevayler-2.00.000dev1.jar"/>-->
        <!--            <manifest>-->
        <!--                <attribute name="Built-By" value="jboner"/>-->
        <!--                <section name="aspectwerkz">-->
        <!--                    <attribute name="Implementation-Title" value="AspectWerkz"/>-->
        <!--                    <attribute name="Implementation-Version" value="${version}"/>-->
        <!--                    <attribute name="Implementation-Vendor" value="jboner"/>-->
        <!--                    <attribute name="Class-path" value="jmangler-core.jar bcel.jar dom4j-1.4.jar qdox-1.2.jar trove-1.0.2.jar concurrent-1.3.1.jar prevayler-2.00.000dev1.jar"/>-->
        <!--                </section>-->
        <!--            </manifest>-->
        <!--        </jar>-->
    </target>

    <!-- =================================================== -->
    <!--  offline transforms the tests -->
    <!-- =================================================== -->
    <target name="aspectwerkz:transform"
        depends="aspectwerkz:init">
        <exec executable="${bin.dir}/aspectwerkz${executableSuffix}">
            <arg line="-offline ${basedir}/src/samples/samples.xml -verbose -verify -cp ${extensions.classes} ${samples.classes} "/>
        </exec>
    </target>

    <!-- =================================================== -->
    <!--  compiles the samples -->
    <!-- =================================================== -->
    <target name="aspectwerkz:samples:compile"
        depends="aspectwerkz:init">
        <mkdir dir="${samples.classes}"/>

        <javac destdir="${samples.classes}" deprecation="true"
            debug="true" optimize="false" excludes="**/samples.xml">
            <src>
                <pathelement location="src/samples"></pathelement>
            </src>
            <classpath>
                <pathelement path="${main.classes}"/>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"></include>
                </fileset>
                <fileset dir="${dist.dir}">
                    <include name="*.jar"></include>
                </fileset>
            </classpath>
        </javac>
        <jar jarfile="${target.dir}/samples.jar" basedir="${samples.classes}"/>
        <copy tofile="${dist.dir}/samples.jar" file="${target.dir}/samples.jar" overwrite="true"/>
    </target>

    <!-- =================================================== -->
    <!--  compiles the extensions -->
    <!-- =================================================== -->
    <target name="aspectwerkz:extensions:compile"
        depends="aspectwerkz:init">
        <mkdir dir="${extensions.classes}"/>

        <javac destdir="${extensions.classes}" deprecation="true"
            debug="true" optimize="false" excludes="**/*.xml">
            <src>
                <pathelement location="src/extensions"></pathelement>
            </src>
            <classpath>
                <pathelement path="${main.classes}"/>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"></include>
                </fileset>
                <fileset dir="${dist.dir}">
                    <include name="*.jar"></include>
                </fileset>
            </classpath>
        </javac>
        <jar jarfile="${target.dir}/extensions.jar" basedir="${extensions.classes}"/>
        <copy tofile="${dist.dir}/extensions.jar" file="${target.dir}/extensions.jar" overwrite="true"/>
    </target>

    <!-- =================================================== -->
    <!--  offline transforms and runs tests -->
    <!-- =================================================== -->
    <target name="aspectwerkz:test"
        depends="aspectwerkz:init, aspectwerkz:jar">
        <exec executable="${bin.dir}/aspectwerkz${executableSuffix}">
            <arg line="-cp ${test.classes}${pathseparator}${samples.classes}${pathseparator}${lib.dir}/junit-3.8.1.jar${pathseparator}${lib.dir}/junitperf.jar -Daspectwerkz.definition.file=${src.dir}/test/aspectwerkz-test.xml test.AllTests"/>
        </exec>
    </target>

    <!-- =================================================== -->
    <!--  multithreaded custom classloader tests -->
    <!--  thread number and loops can be passed as argument -->
    <!--  refer to test.clapp javadoc -->
    <!-- =================================================== -->
    <target name="aspectwerkz:test:clapp"
        depends="aspectwerkz:init, aspectwerkz:compile">
        <!-- run the application in regular mode -->
        <java classname="test.clapp.CrazyClassLoaderApp" fork="true">
            <classpath>
                <pathelement path="${test.classes}"/>
            </classpath>
            <jvmarg value="-DDummyClass=${test.classes}"/>
        </java>
        <!-- run the application thru AspectWerkz -->
        <exec executable="${bin.dir}/aspectwerkz${executableSuffix}">
            <arg line="-cp ${test.classes} -Daspectwerkz.definition.file=${basedir}/src/samples/samples.xml -DDummyClass=${test.classes} test.clapp.CrazyClassLoaderApp"/>
        </exec>
    </target>

    <!-- =================================================== -->
    <!--  JDWP interactive Plug -->
    <!-- =================================================== -->
    <target name="aspectwerkz:samples:plug"
        depends="aspectwerkz:init, aspectwerkz:compile">
        <input message="Input args ? (-info .., -resume .., -hotswap .., -target file.jar)" addproperty="input.args"/>
        <java classname="org.codehaus.aspectwerkz.hook.Plug" fork="true">
            <classpath>
                <pathelement path="${main.classes}"/>
                <pathelement path="${java.home}/../lib/tools.jar"/>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"/>
                </fileset>
            </classpath>
            <arg line="${input.args}"/>
        </java>
    </target>

    <!-- =================================================== -->
    <!--  runs the logging test -->
    <!-- =================================================== -->
    <target name="aspectwerkz:samples:logging"
        depends="aspectwerkz:init, aspectwerkz:attributes:samples">
        <exec executable="${bin.dir}/aspectwerkz${executableSuffix}">
            <arg line="-cp ${basedir}/src/samples${pathseparator}${dist.dir}/samples.jar examples.logging.Target"/>
        </exec>
    </target>

    <!-- =================================================== -->
    <!--  runs the caching test -->
    <!-- =================================================== -->
    <target name="aspectwerkz:samples:caching"
        depends="aspectwerkz:init, aspectwerkz:attributes:samples">
        <exec executable="${bin.dir}/aspectwerkz${executableSuffix}">
            <arg line="-cp ${dist.dir}/samples.jar -Daspectwerkz.definition.file=${src.dir}/samples/aspectwerkz.xml examples.caching.CacheTest"/>
        </exec>
    </target>

    <!-- =================================================== -->
    <!--  runs the asynchronous calls test -->
    <!-- =================================================== -->
    <target name="aspectwerkz:samples:asynchronous"
        depends="aspectwerkz:init, aspectwerkz:attributes:samples">
        <exec executable="${bin.dir}/aspectwerkz${executableSuffix}">
            <arg line="-cp ${dist.dir}/samples.jar -Daspectwerkz.definition.file=${src.dir}/samples/aspectwerkz.xml examples.asynchronous.Target"/>
        </exec>
    </target>

    <!-- =================================================== -->
    <!--  runs the synchronization test -->
    <!-- =================================================== -->
    <target name="aspectwerkz:samples:synchronization"
        depends="aspectwerkz:init, aspectwerkz:attributes:samples">
        <exec executable="${bin.dir}/aspectwerkz${executableSuffix}">
            <arg line="-cp ${dist.dir}/samples.jar${pathseparator}${lib.dir}/commons-collections-2.1.jar -Daspectwerkz.definition.file=${src.dir}/samples/aspectwerkz.xml examples.synchronization.Target"/>
        </exec>
    </target>

    <!-- =================================================== -->
    <!--  runs the cflow test -->
    <!-- =================================================== -->
    <target name="aspectwerkz:samples:cflow"
        depends="aspectwerkz:init, aspectwerkz:attributes:samples">
        <exec executable="${bin.dir}/aspectwerkz${executableSuffix}">
            <arg line="-cp ${dist.dir}/samples.jar -Daspectwerkz.definition.file=${src.dir}/samples/aspectwerkz.xml examples.cflow.Target"/>
        </exec>
    </target>

    <!-- =================================================== -->
    <!--  runs the transparent persistence test -->
    <!-- =================================================== -->
    <target name="aspectwerkz:samples:transparentpersistence"
        depends="aspectwerkz:init, aspectwerkz:attributes:extensions">
        <exec executable="${bin.dir}/aspectwerkz${executableSuffix}">
            <arg line="-cp ${dist.dir}/extensions.jar${pathseparator}${dist.dir}/samples.jar${pathseparator}${lib.dir}/jisp-2.0.1.jar -Daspectwerkz.definition.file=${src.dir}/samples/aspectwerkz.xml -Daspectwerkz.extension.persistence.definition.file=${basedir}/src/samples/persistence_definition.xml examples.transparentpersistence.Client"/>
        </exec>
    </target>

    <!-- =================================================== -->
    <!--  runs the introduction test -->
    <!-- =================================================== -->
    <target name="aspectwerkz:samples:introduction"
        depends="aspectwerkz:init, aspectwerkz:attributes:samples">
        <exec executable="${bin.dir}/aspectwerkz${executableSuffix}">
            <arg line="-cp ${dist.dir}/extensions.jar${pathseparator}${lib.dir}/ant-1.5.2.jar${pathseparator}${dist.dir}/samples.jar -Daspectwerkz.definition.file=${src.dir}/samples/aspectwerkz.xml examples.introduction.Target"/>
        </exec>
    </target>

    <!-- =================================================== -->
    <!--  compiles attributes for the samples, merges w/ the samples.xml -->
    <!-- =================================================== -->
    <target name="aspectwerkz:attributes:samples"
        depends="aspectwerkz:init">
        <exec executable="java">
            <arg line="-cp ${main.classes}${pathseparator}${lib.dir}/piccolo-1.03.jar${pathseparator}${lib.dir}/qdox-1.2.jar${pathseparator}${lib.dir}/dom4j-1.4.jar${pathseparator}${lib.dir}/trove-1.0.2.jar${pathseparator}${lib.dir}/commons-jexl-1.0-beta-2.jar${pathseparator}${lib.dir}/jrexx-1.1.1.jar org.codehaus.aspectwerkz.metadata.AttributeC ${basedir}/src/samples ${basedir}/src/samples/aspectwerkz.xml -m ${basedir}/src/samples/samples.xml -u samples"/>
        </exec>
    </target>

    <!-- =================================================== -->
    <!--  compiles attributes for the samples, merges w/ the extension_samples.xml -->
    <!-- =================================================== -->
    <target name="aspectwerkz:attributes:extensions"
        depends="aspectwerkz:init">
        <exec executable="java">
            <arg line="-cp ${main.classes}${pathseparator}${lib.dir}/piccolo-1.03.jar${pathseparator}${lib.dir}/qdox-1.2.jar${pathseparator}${lib.dir}/dom4j-1.4.jar${pathseparator}${lib.dir}/trove-1.0.2.jar${pathseparator}${lib.dir}/commons-jexl-1.0-beta-2.jar${pathseparator}${lib.dir}/jrexx-1.1.1.jar org.codehaus.aspectwerkz.metadata.AttributeC ${basedir}/src/samples ${basedir}/src/samples/aspectwerkz.xml -m ${basedir}/src/samples/samples.xml -u samples"/>
        </exec>
    </target>

</project>

