/* Generated By:JJTree&JavaCC: Do not edit this line. ExpressionParserConstants.java */
/**************************************************************************************
 * Copyright (c) Jonas Bonér, Alexandre Vasseur. All rights reserved.                 *
 * http://aspectwerkz.codehaus.org                                                    *
 * ---------------------------------------------------------------------------------- *
 * The software in this package is published under the terms of the LGPL license      *
 * a copy of which has been included with this distribution in the license.txt file.  *
 **************************************************************************************/
package org.codehaus.aspectwerkz.expression.ast;

public interface ExpressionParserConstants {

  int EOF = 0;
  int COMMA = 3;
  int DOT = 4;
  int WILDCARD = 5;
  int ARRAY = 6;
  int EAGER_WILDCARD = 7;
  int AND = 8;
  int OR = 9;
  int NOT = 10;
  int EXECUTION = 11;
  int CALL = 12;
  int SET = 13;
  int GET = 14;
  int HANDLER = 15;
  int WITHIN = 16;
  int WITHIN_CODE = 17;
  int STATIC_INITIALIZATION = 18;
  int CFLOW = 19;
  int CFLOW_BELOW = 20;
  int ARGS = 21;
  int TARGET = 22;
  int THIS = 23;
  int IF = 24;
  int POINTCUT_REFERENCE_WITH_ARGS = 25;
  int POINTCUT_REFERENCE = 26;
  int CLASS_PRIVATE = 27;
  int CLASS_PROTECTED = 28;
  int CLASS_PUBLIC = 29;
  int CLASS_STATIC = 30;
  int CLASS_ABSTRACT = 31;
  int CLASS_FINAL = 32;
  int CLASS_NOT = 33;
  int CLASS_ATTRIBUTE = 34;
  int CLASS_PATTERN = 35;
  int CLASS_IDENTIFIER = 36;
  int CLASS_JAVA_NAME_LETTER = 37;
  int CLASS_POINTCUT_END = 38;
  int METHOD_PUBLIC = 39;
  int METHOD_PROTECTED = 40;
  int METHOD_PRIVATE = 41;
  int METHOD_STATIC = 42;
  int METHOD_ABSTRACT = 43;
  int METHOD_FINAL = 44;
  int METHOD_NATIVE = 45;
  int METHOD_SYNCHRONIZED = 46;
  int METHOD_NOT = 47;
  int METHOD_ANNOTATION = 48;
  int METHOD_IDENTIFIER = 49;
  int METHOD_CLASS_PATTERN = 50;
  int METHOD_ARRAY_CLASS_PATTERN = 51;
  int PARAMETER_START = 52;
  int PARAMETER_END = 53;
  int METHOD_JAVA_NAME_LETTER = 54;
  int FIELD_PRIVATE = 55;
  int FIELD_PROTECTED = 56;
  int FIELD_PUBLIC = 57;
  int FIELD_STATIC = 58;
  int FIELD_ABSTRACT = 59;
  int FIELD_FINAL = 60;
  int FIELD_TRANSIENT = 61;
  int FIELD_NOT = 62;
  int FIELD_ANNOTATION = 63;
  int FIELD_IDENTIFIER = 64;
  int FIELD_CLASS_PATTERN = 65;
  int FIELD_ARRAY_CLASS_PATTERN = 66;
  int FIELD_JAVA_NAME_LETTER = 67;
  int FIELD_POINTCUT_END = 68;
  int PARAMETER_IDENTIFIER = 69;
  int PARAMETER_CLASS_PATTERN = 70;
  int PARAMETER_ARRAY_CLASS_PATTERN = 71;
  int PARAMETER_ANNOTATION = 72;
  int PARAMETER_JAVA_NAME_LETTER = 73;
  int PARAMETER_NOT = 74;
  int ARG_IDENTIFIER = 75;
  int ARG_PATTERN = 76;
  int ARG_ARRAY_PATTERN = 77;
  int ARG_JAVA_NAME_LETTER = 78;
  int ARGS_END = 79;

  int IN_ARGS = 0;
  int PARAMETERS = 1;
  int FIELD = 2;
  int METHOD = 3;
  int CLASS = 4;
  int DEFAULT = 5;

  String[] tokenImage = {
    "<EOF>",
    "\" \"",
    "\"\\t\"",
    "\",\"",
    "\".\"",
    "\"*\"",
    "\"[]\"",
    "<EAGER_WILDCARD>",
    "<AND>",
    "<OR>",
    "<NOT>",
    "\"execution(\"",
    "\"call(\"",
    "\"set(\"",
    "\"get(\"",
    "\"handler(\"",
    "\"within(\"",
    "\"withincode(\"",
    "\"staticinitialization(\"",
    "\"cflow(\"",
    "\"cflowbelow(\"",
    "\"args(\"",
    "\"target(\"",
    "\"this(\"",
    "\"if(\"",
    "<POINTCUT_REFERENCE_WITH_ARGS>",
    "<POINTCUT_REFERENCE>",
    "\"private\"",
    "\"protected\"",
    "\"public\"",
    "\"static\"",
    "\"abstract\"",
    "\"final\"",
    "<CLASS_NOT>",
    "<CLASS_ATTRIBUTE>",
    "<CLASS_PATTERN>",
    "<CLASS_IDENTIFIER>",
    "<CLASS_JAVA_NAME_LETTER>",
    "\")\"",
    "\"public\"",
    "\"protected\"",
    "\"private\"",
    "\"static\"",
    "\"abstract\"",
    "\"final\"",
    "\"native\"",
    "\"synchronized\"",
    "<METHOD_NOT>",
    "<METHOD_ANNOTATION>",
    "<METHOD_IDENTIFIER>",
    "<METHOD_CLASS_PATTERN>",
    "<METHOD_ARRAY_CLASS_PATTERN>",
    "\"(\"",
    "\")\"",
    "<METHOD_JAVA_NAME_LETTER>",
    "\"private\"",
    "\"protected\"",
    "\"public\"",
    "\"static\"",
    "\"abstract\"",
    "\"final\"",
    "\"transient\"",
    "<FIELD_NOT>",
    "<FIELD_ANNOTATION>",
    "<FIELD_IDENTIFIER>",
    "<FIELD_CLASS_PATTERN>",
    "<FIELD_ARRAY_CLASS_PATTERN>",
    "<FIELD_JAVA_NAME_LETTER>",
    "\")\"",
    "<PARAMETER_IDENTIFIER>",
    "<PARAMETER_CLASS_PATTERN>",
    "<PARAMETER_ARRAY_CLASS_PATTERN>",
    "<PARAMETER_ANNOTATION>",
    "<PARAMETER_JAVA_NAME_LETTER>",
    "<PARAMETER_NOT>",
    "<ARG_IDENTIFIER>",
    "<ARG_PATTERN>",
    "<ARG_ARRAY_PATTERN>",
    "<ARG_JAVA_NAME_LETTER>",
    "\")\"",
    "\"(\"",
    "\")\"",
  };

}
