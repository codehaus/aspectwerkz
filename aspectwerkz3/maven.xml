<project default="aspectwerkz:site" xmlns:m="jelly:maven" xmlns:jxr="jxr" xmlns:j="jelly:core" xmlns:u="jelly:util">

    <!-- =================================================== -->
    <!--  set properties -->
    <!-- =================================================== -->
    <property name="pathseparator" value=""/>
    <property name="executableSuffix" value=""/>
    <property name="target.dir" value="${basedir}/target"/>
    <property name="lib.dir" value="${basedir}/lib"/>
    <property name="bin.dir" value="${basedir}/bin"/>
    <property name="dist.dir" value="${basedir}/dist"/>
    <property name="src.dir" value="${basedir}/src"/>
    <property name="main.classes" value="${target.dir}/classes"/>
    <property name="test.classes" value="${target.dir}/test-classes"/>
    <property name="samples.classes" value="${target.dir}/samples-classes"/>
    <property name="extensions.classes" value="${target.dir}/extensions-classes"/>

    <!-- =================================================== -->
    <!--  initializes parameters  -->
    <!-- =================================================== -->
    <goal name="aspectwerkz:init">
        <mkdir dir="${dist.dir}"/>
        <j:choose>
            <j:when test="${systemScope['os.name'].startsWith('Windows')}">
                <j:set var="pathseparator" value=";"/>
                <j:set var="executableSuffix" value=".bat"/>
            </j:when>
            <j:otherwise>
                <j:set var="pathseparator" value=":"/>
                <j:set var="executableSuffix" value=""/>
            </j:otherwise>
        </j:choose>
    </goal>

    <!-- =================================================== -->
    <!--  generates reports and deploys site -->
    <!-- =================================================== -->
    <goal name="aspectwerkz:site">
        <attainGoal name="clean"/>
        <attainGoal name="aspectwerkz:init"/>
        <attainGoal name="site:deploy"/>
    </goal>

    <!-- =================================================== -->
    <!--  compiles the core distribution and makes a jar file including all the libraries -->
    <!-- =================================================== -->
    <goal name="aspectwerkz:jar">
        <attainGoal name="aspectwerkz:init"/>
        <attainGoal name="java:compile"/>
        <attainGoal name="aspectwerkz:jdk15:compile"/>
        <copy file="${src.dir}/main/aspectwerkz.dtd" todir="${main.classes}"/>
        <jar jarfile="${target.dir}/aspectwerkz-${pom.currentVersion}.jar" manifest="${lib.dir}/manifest.mf">
            <fileset dir="${main.classes}">
                <exclude name="**/aspectwerkz/hook/**/*"/>
            </fileset>
        </jar>
        <copy tofile="${lib.dir}/aspectwerkz-${pom.currentVersion}.jar" file="${target.dir}/aspectwerkz-${pom.currentVersion}.jar" overwrite="true"/>

        <!-- split dist for layer 1 separation -->
        <jar jarfile="${target.dir}/aspectwerkz-core-${pom.currentVersion}.jar">
            <fileset dir="${main.classes}">
                <include name="**/aspectwerkz/hook/**/*"/>
            </fileset>
        </jar>
        <copy tofile="${lib.dir}/aspectwerkz-core-${pom.currentVersion}.jar" file="${target.dir}/aspectwerkz-core-${pom.currentVersion}.jar" overwrite="true"/>
        <attainGoal name="aspectwerkz:extensions:compile"/>
        <copy tofile="${lib.dir}/aspectwerkz-extensions-${pom.currentVersion}.jar" file="${target.dir}/extensions.jar" overwrite="true"/>
    </goal>
    <goal name="aspectwerkz:jdk15:compile">
        <j:choose>
            <j:when test="${systemScope['java.version'].startsWith('1.5')}">
                <echo message="** Found jdk15 specific compilation..."/>
                <attainGoal name="aspectwerkz:init"/>
                <javac destdir="${main.classes}" deprecation="true"
                    debug="true" optimize="false">
                    <src>
                        <pathelement location="src/jdk15"></pathelement>
                    </src>
                    <classpath>
                        <pathelement path="${main.classes}"/>
                        <fileset dir="${lib.dir}">
                            <include name="*.jar"></include>
                        </fileset>
                    </classpath>
                </javac>
            </j:when>
            <j:otherwise>
                <echo message="** Skipping jdk15 specific compilation..."/>
            </j:otherwise>
        </j:choose>
    </goal>

    <!-- =================================================== -->
    <!--  compiles everything -->
    <!-- =================================================== -->
    <goal name="aspectwerkz:compile">
        <attainGoal name="aspectwerkz:init"/>
        <attainGoal name="aspectwerkz:jar"/>
        <attainGoal name="aspectwerkz:extensions:compile"/>
        <attainGoal name="aspectwerkz:samples:compile"/>
        <attainGoal name="test:compile"/>
    </goal>

    <!-- =================================================== -->
    <!--  compiles the samples -->
    <!-- =================================================== -->
    <goal name="aspectwerkz:samples:compile">
        <attainGoal name="aspectwerkz:init"/>
        <mkdir dir="${samples.classes}"/>
        <javac destdir="${samples.classes}" deprecation="true"
            debug="true" optimize="false" excludes="**/samples.xml">
            <src>
                <pathelement location="src/samples"></pathelement>
            </src>
            <classpath>
                <pathelement path="${main.classes}"/>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"></include>
                </fileset>
                <fileset dir="${dist.dir}">
                    <include name="*.jar"></include>
                </fileset>
            </classpath>
        </javac>
        <jar jarfile="${target.dir}/aspectwerkz-samples.jar" basedir="${samples.classes}"/>
        <copy tofile="${dist.dir}/aspectwerkz-samples.jar" file="${target.dir}/aspectwerkz-samples.jar" overwrite="true"/>
    </goal>

    <!-- =================================================== -->
    <!--  compiles the extensions -->
    <!-- =================================================== -->
    <goal name="aspectwerkz:extensions:compile">
        <attainGoal name="aspectwerkz:init"/>
        <mkdir dir="${extensions.classes}"/>
        <javac destdir="${extensions.classes}" deprecation="true"
            debug="true" optimize="false" excludes="**/*.xml">
            <src>
                <pathelement location="src/extensions"></pathelement>
            </src>
            <classpath>
                <pathelement path="${main.classes}"/>
                <fileset dir="${lib.dir}">
                    <include name="*.jar"></include>
                </fileset>
                <fileset dir="${dist.dir}">
                    <include name="*.jar"></include>
                </fileset>
            </classpath>
        </javac>
        <jar jarfile="${target.dir}/extensions.jar" basedir="${extensions.classes}"/>
        <copy tofile="${dist.dir}/extensions.jar" file="${target.dir}/extensions.jar" overwrite="true"/>
    </goal>

    <!-- =================================================== -->
    <!--  downloads dependencies -->
    <!-- =================================================== -->
    <goal name="aspectwerkz:getdeps">
        <attainGoal name="aspectwerkz:init"/>
        <mkdir dir="${lib.dir}"/>
        <copy todir="${lib.dir}" flatten="true">
            <fileset dir="${maven.repo.local}">
                <j:forEach var="dep" items="${pom.dependencies}">
                    <include name="${dep.projectId}/jars/${dep.jar}"/>
                </j:forEach>
            </fileset>
        </copy>
    </goal>

    <!-- =================================================== -->
    <!--  creates a patch of your changes -->
    <!-- =================================================== -->
    <goal name="cvs:make-patch" description="Creates a patch of *your* changes">
        <cvs command="-q diff -b -u -N" output="patch.txt"/>
        <echo>
            Please create a new issue in AspectWerkz's JIRA:
            http://jira.codehaus.org/secure/BrowseProject.jspa?id=10105
            Then attach the patch.txt file.
            If your patch consists of entirely new files too, please zip them
            up and attach them too.

            If your patch includes JUnit tests and a decent description,
            you increase the chance of having the patch applied by some
            of the committers.
        </echo>
    </goal>

    <!-- =================================================== -->
    <!--  preGoal for xdoc FAQ -->
    <!-- =================================================== -->
    <preGoal name="xdoc:jelly-transform">
        <attainGoal name="faq"/>
    </preGoal>
</project>


